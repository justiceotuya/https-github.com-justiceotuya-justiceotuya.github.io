{"version":3,"sources":["webpack:///./src/pages/portfolio/{portfolioJson.project}.jsx"],"names":["StyledPortFolioPageContainer","styled","div","StyledDeviceContainer","props","isMobile","Component","data","portfolioJson","imagesFileName","coverImageAlt","coverImageName","id","project","tagLine","title","to","className","map","image","imageAlt","imageName","key","fileName","alt"],"mappings":"6FAAA,4GAKMA,EAA+BC,IAAOC,IAAV,qGAAGD,CAAH,4jBAyE5BE,EAAwBF,IAAOC,IAAV,8FAAGD,CAAH,0gBAGZ,SAAAG,GAAK,OAAIA,EAAMC,UAAY,aAE7B,SAAAD,GAAK,OAAKA,EAAMC,SAAW,QAAU,YAsCnC,SAASC,EAAT,GAA8B,IAAD,IAARC,KAE5BC,cAEIC,GAJgC,EAGhCC,cAHgC,EAGjBC,eAHiB,EAGDC,GAHC,EAIhCH,gBAAgBI,EAJgB,EAIhBA,QAASC,EAJO,EAIPA,QAASC,EAJF,EAIEA,MAI1C,OACI,kBAAC,IAAD,KACI,kBAACf,EAAD,KACI,kBAAC,IAAD,CAAMgB,GAAG,IAAIC,UAAU,YACnB,oCAGJ,6BAASA,UAAU,sBAQf,yBAAKA,UAAU,WACX,uBAAGA,UAAU,SAAb,aAGA,uBAAGA,UAAU,QACRH,IAYT,yBAAKG,UAAU,UACX,uBAAGA,UAAU,SAAb,YAGA,uBAAGA,UAAU,QACRJ,KAUTJ,EAAeS,KAAI,SAAAC,GAAU,IAAD,EAChBC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,UAAWhB,EAAac,EAAbd,SAC7B,OACI,kBAACF,EAAD,CACIE,SAAUA,EACViB,IAAKF,IAEFf,GACC,yBAAKY,UAAU,kBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,cAGvB,kBAAC,MAAD,GACIM,SAAUF,EACVG,IAAKJ,EACLH,UAAU,aACVF,MAAOA,EACPV,SAAUA,EACViB,IAAKD,IANT,IAQSD,EART","file":"component---src-pages-portfolio-portfolio-json-project-jsx-c69369a0fbfc08500886.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { Image, Layout } from '../../component';\n\nconst StyledPortFolioPageContainer = styled.div`\npadding: 2em;\n.homeLink {\n    color: black;\n    display: inline;\n    font-size: clamp(1rem, 2.5vw, 2rem);\n\n    :hover {\n        color:#C6C6C6 ;\n    }\n}\n\n.projectDescription {\n    min-height: 80vh;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    flex-direction: column;\n    max-width: 900px;\n    margin: 0 auto;\n\n    .project,\n    .client,\n    .description{\n    margin-bottom:20px;\n    font-size: clamp(1rem, 2.5vw, 2rem);\n    display: flex;\n    flex-direction: column;\n    line-height: 150%;\n    font-weight: 400;\n    color: #342e38;\n\n    strong {\n      color: #000;\n    }\n\n\n/* @media screen and (min-width: 480px) and (max-width: 767px){\n    font-size: 24px;\n    line-height: 40px;\n    }\n\n    @media screen  and (min-width: 768px) and (max-width: 991px){\n    font-size: 28px;\n    line-height: 48px;\n}\n    @media screen  and (min-width: 992px){\n      font-size: 32px;\n    line-height: 56px;\n} */\n\n\n    .title{\n           color: #000000\n        }\n\n\n    @media screen and (min-width: 720px){\n        flex-direction: row;\n        .title{\n            width: 250px;\n        }\n        .text{\n            width: calc(100% - 250px);\n        }\n\n    }\n\n}\n}\n\n`;\n\nconst StyledDeviceContainer = styled.div`\nborder-radius: 1em;\nborder: 20px solid #F8F9FA;\nborder-color:${props => props.isMobile && '#676767'};\nwidth: 100%;\nmax-width: ${props => (props.isMobile ? '400px' : '1000px')};\nmargin: 40px auto;\nposition: relative;\n\n\n.controlButtons{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 20px;\nposition: absolute;\nleft:0;\ntop:-20px;\n    .close ,\n    .minimize ,\n    .maximize {\n        width: 10px;\n    height: 10px;\n    background-color: red;\n    border-radius: 100%;\n    margin-right: 10px\n    }\n\n    .close {\n        background-color: #FF5F58;\n        border-color: #EF9D9A;\n    }\n    .minimize {\n        background-color: #E5E5E5;\n        border-color: #C6C6C6;\n    }\n    .maximize{\n        border-color: #00AB00;\n        background-color: #29C83F;\n    }\n}\n`;\n\nexport default function Component({ data }) {\n    const {\n        portfolioJson: {\n            coverImageAlt, coverImageName, id,\n            imagesFileName, project, tagLine, title,\n        },\n    } = data;\n\n    return (\n        <Layout>\n            <StyledPortFolioPageContainer>\n                <Link to=\"/\" className=\"homeLink\">\n                    <p>Home</p>\n                </Link>\n                {/* <h1>{Project}</h1> */}\n                <section className=\"projectDescription\">\n                    {/* <h1 className=\"project\">\n                        {' '}\n                        Project :\n                        {' '}\n                        {tagLine}\n                    </h1> */}\n\n                    <div className=\"project\">\n                        <p className=\"title\">\n                            Project :\n                        </p>\n                        <p className=\"text\">\n                            {tagLine}\n                        </p>\n                    </div>\n                    {/* <div className=\"client\">\n                        <p className=\"title\">\n                            Client :\n                        </p>\n                        <p className=\"text\">\n                            {project}\n                        </p>\n                    </div> */}\n\n                    <div className=\"client\">\n                        <p className=\"title\">\n                            Client :\n                        </p>\n                        <p className=\"text\">\n                            {project}\n                        </p>\n                    </div>\n\n                    {/* <div className=\"description\">\n                        <p className=\"title\">Description :</p>\n                        <p className=\"text\"> Lorem ipsum dolor sit amet consectetur, adipisiusandae rerucing elit. Dolores quisquam iusto, cumque possimus, quasi odit harum impedit voluptatum recm libero natus molestiae vitae dignissimos quod neque minus quaerat. Nisi.</p>\n                    </div> */}\n                </section>\n                {\n                    imagesFileName.map(image => {\n                        const { imageAlt, imageName, isMobile } = image;\n                        return (\n                            <StyledDeviceContainer\n                                isMobile={isMobile}\n                                key={imageAlt}\n                            >\n                                { !isMobile && (\n                                    <div className=\"controlButtons\">\n                                        <div className=\"close\" />\n                                        <div className=\"minimize\" />\n                                        <div className=\"maximize\" />\n                                    </div>\n                                )}\n                                <Image\n                                    fileName={imageName}\n                                    alt={imageAlt}\n                                    className=\"image_test\"\n                                    title={title}\n                                    isMobile={isMobile}\n                                    key={imageName}\n                                    // to={project.toLowerCase()}\n                                    key={imageAlt}\n                                />\n                            </StyledDeviceContainer>\n                        );\n                    })\n                }\n            </StyledPortFolioPageContainer>\n        </Layout>\n    ); // highlight-line\n}\n\n// This is the page query that connects the data to the actual component. Here you can query for any and all fields\n// you need access to within your code. Again, since Gatsby always queries for `id` in the collection, you can use that\n// to connect to this GraphQL query.\n\nexport const query = graphql`\n  query($project: String) {\n    portfolioJson(project: {eq: $project}) {\n        coverImageAlt\n        id\n        coverImageName\n        imagesFileName {\n          imageAlt\n          imageName\n          isMobile\n        }\n        project\n        tagLine\n      }\n\n  }\n`;\n"],"sourceRoot":""}